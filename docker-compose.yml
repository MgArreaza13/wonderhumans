version: '3.1'

services:
  database:
    image: "postgres:alpine"
    volumes:
      - ./db:/var/lib/postgresql/data
    env_file:
      - ./db/.env.db
    ports:
      - "5432:5432"

  broker:
    image: "rabbitmq:alpine"

  redis:
    image: "redis:alpine"

  frontend:
    build:
      dockerfile: frontend/Dockerfile
      context: .
    stdin_open: true
    volumes:
      - ./frontend:/home/user/app/frontend
      - /home/user/app/frontend/node_modules
    ports:
      - "80:80"

  backend:
    build:
      dockerfile: backend/Dockerfile
      context: .
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - ./backend/:/home/user/app/backend
    env_file: backend/.env
    depends_on:
      - database
      - broker
      - redis
      - frontend

  celery:
    build:
      dockerfile: backend/Dockerfile
      context: .
    command: celery -A wonderhumans worker -l INFO
    env_file: backend/.env
    depends_on:
      - database
      - broker
      - redis

  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=8888
    command: ["flower", "--broker=redis://redis:6379/0", "--port=5555"]
    ports:
      - 5555:5555


  # celery-beat:
  #   build:
  #     dockerfile: backend/Dockerfile
  #     context: .
  #   command: celery -A wonderhumans beat -l INFO
  #   # volumes:
  #   #   - ./project/:/usr/src/app/
  #   env_file: backend/.env
  #   depends_on:
  #     - database
  #     - broker
  #     - redis
